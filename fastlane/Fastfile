$path_ios = "ios"
$path_android = "android/SwiftKotlination"

$project_ios = "#{$path_ios}/SwiftKotlination.xcworkspace"
$project_android = "fr.jhandguy.swiftkotlination"

platform :ios do
  before_all do
    clear_derived_data
    
    reset_simulator_contents
  end

  lane :tests do
    swiftlint(
      path: $path_ios
    )

    run_tests(
      clean: true,
      code_coverage: true,
      workspace: $project_ios,
      scheme: "SwiftKotlination"
    )
  end

  lane :screenshots do
    capture_ios_screenshots(
      clear_previous_screenshots: true,
      workspace: $project_ios,
      scheme: "SwiftKotlination"
    )
  end
end

platform :android do
  before_all do
    sh("adb shell settings put global window_animation_scale 0")
    sh("adb shell settings put global transition_animation_scale 0")
    sh("adb shell settings put global animator_duration_scale 0")
  end

  lane :tests do
    sh("ktlint ../#{$path_android}/**/*.kt ../#{$path_android}/**/*.kts")

    build_android_app(
      task: "clean jacocoTestReport",
      project_dir: $path_android
    )
  end

  lane :screenshots do
    build_android_app(
      task: 'clean',
      project_dir: $path_android
    )

    build_android_app(
      task: 'assemble',
      build_type: 'Debug',
      project_dir: $path_android
    )

    build_android_app(
      task: 'assemble',
      build_type: 'AndroidTest',
      project_dir: $path_android
    )
    
    capture_android_screenshots(
      clear_previous_screenshots: true,
      app_package_name: $project_android,
      app_apk_path: "#{$path_android}/app/build/outputs/apk/debug/app-debug.apk",
      tests_apk_path: "#{$path_android}/app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk",
      test_instrumentation_runner: "#{$project_android}.runner.AndroidTestRunner"
    )
  end
end
