$path_ios = "ios"
$path_android = "android/SwiftKotlination"

$project_ios = "#{$path_ios}/SwiftKotlination.xcworkspace"
$project_android = "fr.jhandguy.swiftkotlination"

$device_ios = "iPhone 11"
$device_android = "Nexus 5X"

$version_ios = "13.5"
$version_android = "30"
$version_build_tools = "30.0.0"

platform :ios do
  before_all do
    clear_derived_data
    
    reset_simulator_contents(
      os_versions: [$version_ios]
    )
  end

  lane :tests do
    swiftlint(
      path: $path_ios
    )

    run_tests(
      device: $device_ios,
      clean: true,
      code_coverage: true,
      workspace: $project_ios,
      scheme: "SwiftKotlination"
    )
  end

  lane :screenshots do
    capture_ios_screenshots(
      devices: $device_ios,
      clear_previous_screenshots: true,
      workspace: $project_ios
    )
  end
end

platform :android do
  before_all do 
    sh("echo yes | sdkmanager \"system-images;android-#{$version_android};google_apis;x86\"")
    sh("echo yes | sdkmanager \"build-tools;#{$version_build_tools}\"")
    sh("echo yes | sdkmanager --update")
    sh("echo no | avdmanager create avd --force --name \"api-#{$version_android}\" --abi \"google_apis/x86\" --package \"system-images;android-#{$version_android};google_apis;x86\" --device \"#{$device_android}\"")
    sh("emulator -avd \"api-#{$version_android}\" -gpu swiftshader_indirect -no-window -no-snapshot -no-audio -no-boot-anim -camera-back none -camera-front none > /dev/null 2>&1 &")
    sh("adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done; input keyevent 82'")
    sh("adb shell settings put global window_animation_scale 0")
    sh("adb shell settings put global transition_animation_scale 0")
    sh("adb shell settings put global animator_duration_scale 0")
  end

  lane :tests do
    sh("ktlint ../#{$path_android}/app/src/**/*.kt")

    build_android_app(
      task: "clean jacocoTestReport",
      project_dir: $path_android
    )
  end

  lane :screenshots do
    build_android_app(
      task: 'clean',
      project_dir: $path_android
    )

    build_android_app(
      task: 'assemble',
      build_type: 'Debug',
      project_dir: $path_android
    )

    build_android_app(
      task: 'assemble',
      build_type: 'AndroidTest',
      project_dir: $path_android
    )
    
    capture_android_screenshots(
      clear_previous_screenshots: true,
      app_package_name: $project_android,
      app_apk_path: "#{$path_android}/app/build/outputs/apk/debug/app-debug.apk",
      tests_apk_path: "#{$path_android}/app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk",
      test_instrumentation_runner: "#{$project_android}.runner.AndroidTestRunner"
    )
  end

  after_all do
    sh("adb emu kill")
  end

  error do
    sh("adb emu kill")
  end
end
